name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE_NAME: ${{ github.actor }}/urunan-be:latest
  FRONTEND_IMAGE_NAME: ${{ github.actor }}/urunan-fe:latest

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: login
      run: |
        echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    
    - name: build & publish backend
      working-directory: ./backend
      run: |
        docker build --tag ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }} .
        docker push ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}

    - name: build & publish frontend
      working-directory: ./frontend
      run: |
        docker build --tag ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }} .
        docker push ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}

  deploy:
    needs: build
    name: deploy image
    runs-on: ubuntu-latest

    steps:
    - name: install ssh keys
      # check this thread to understand why its needed:
      # <https://stackoverflow.com/a/70447517>
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts

    - name: stop container
      run: |
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker stop urunan-be urunan-fe || \
          echo 'Container is already stopped, continuing...'"
    
    - name: login
      run: |
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin"
    
    - name: connect and run
      run: |
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker run -d --rm -p 8080:80 --name urunan-be --pull=always ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}; \
          docker run -d --rm -p 80:8080 --name urunan-fe --pull=always ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}"
    
    - name: cleanup
      run: rm -rf ~/.ssh

  test:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    - name: accessibility test
      run: curl --silent --fail http://${{ secrets.SSH_HOST }} && curl --silent --fail http://${{ secrets.SSH_HOST }}:8080/docs

